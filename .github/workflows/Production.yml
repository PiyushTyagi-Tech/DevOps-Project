name: Prod-deploy

on:
    workflow_run:
      workflows: ["CICD"]
      types:
        - completed

jobs:
   Devlopment-test:
    runs-on: [self-hosted]
    steps:
      - name: Testing the server
        run: cd /home/ubuntu/actions-runner/actions-runner && ./test.sh


   prod-login:
    needs: Devlopment-test
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-2'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }} 
      
          

   deploy:
    needs: prod-login
    runs-on: [prod-server]
    steps:
      - name: Pulling image
        id: pull-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          REPOSITORY: nodejs-app
        run: |
          docker pull piyush8085/nodejs-app:${{ github.sha }}
          
      - name: Pull image from docker hub
        run: sudo docker pull piyush8085/nodejs-app:${{ github.sha }}
        
      - name: Delete old container
        run: sudo docker rm -f nodejs-app-container
              
      - name: Run docker container
        run: sudo docker run -d -p 8001:5000 --name nodejs-app-container piyush8085/nodejs-app:${{ github.sha }}